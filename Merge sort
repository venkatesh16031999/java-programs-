import java.util.*;

public class Main
{
    
    public static void merge(int arr[],int low,int middle,int high){
     
        int temp[]=new int[high+1];
        
        for(int i=low;i<=high;i++){
            temp[i]=arr[i];
        }
        
        int i=low;
        int j=middle+1;
        int k=low;
        
        while( (i<=middle) && (j<=high) ){
            
            if(temp[i]<=temp[j]){
                arr[k]=temp[i];
                i++;
            }else{
                arr[k]=temp[j];
                j++;
            }
            k++;
        }
        
        while(i<=middle){
            arr[k]=temp[i];
            i++;
            k++;
        }
        
        while(j<=high){
            arr[k]=temp[j];
            j++;
            k++;
        }
        
    }
    
    public static void mergeSort(int arr[],int low,int high){
        
        if(low>=high){
            return;
        }
        
        int middle=(low+high)/2;
        
        mergeSort(arr,low,middle);
        mergeSort(arr,middle+1,high);
        merge(arr,low,middle,high);
        
    }
    
    public static int binarySearch(int[] arr,int n){
        
        int left=0;
        int right=arr.length-1;
        
        while(left<=right){
            
            int middle=(left+right)/2;
            
            if(n<arr[middle]){
                right=middle-1;
            }else if(n>arr[middle]){
                left=middle+1;
            }else{
                return middle;
            }
        }
        
        return -1;
        
    }
    
	public static void main(String[] args) {
		
		int arr[]={4,8,0,6};
		
	    mergeSort(arr,0,arr.length-1);
	
	
	System.out.println(Arrays.toString(arr));
	
// 		System.out.println(binarySearch(arr,25));
		
	}
}
