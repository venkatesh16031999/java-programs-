class Node{
    public int data;
    public Node next;
    
    public Node(int value){
        this.data=value;
    }
    
}

class LL{
    
    Node head;
    Node tail;
    
    public void add(int value){
        Node newnode=new Node(value);
        if(head==null){
            head=newnode;
            tail=newnode;
        }else{
            tail.next=newnode;
            tail=tail.next;
        }
    }
    
    public void print(){
        
        Node cur=head;
        
        while(cur!=null){
            System.out.print(cur.data+" ");
            cur=cur.next;
        }
        
    }
    
    public Node reverse(Node node){
        
        Node cur=node;
        Node prev=null;
        Node next=null;
        
        while(cur!=null){
            next=cur.next;
            cur.next=prev;
            prev=cur;
            cur=next;
        }
        
        return prev;
        
    }
    
    public Node mid(){
        
        Node sl=head;
        Node fl=head;
        
        while(sl!=null && fl!=null && fl.next!=null && fl.next.next!=null){
            sl=sl.next;
            fl=fl.next.next;
        }
        
        return sl;
        
    }
    
    public Node reorder(){
        
        Node mid=mid();
        Node list2=reverse(mid.next);
        mid.next=null;
        Node list1=head;
        Node temp=new Node(0);
        Node dummy=temp;
        while(list1!=null || list2!=null){
            
            if(list1!=null){
                temp.next=list1;
                list1=list1.next;
                temp=temp.next;
            }
            
            if(list2!=null){
                temp.next=list2;
                list2=list2.next;
                temp=temp.next;
            }
        }
        
        return dummy.next;
        
    }
    
}

public class Main
{
	public static void main(String[] args) {
		
		LL list=new LL();
		
		list.add(1);
		list.add(2);
		list.add(3);
		list.add(4);
		list.add(5);
		list.add(6);
		list.add(7);
		list.add(8);
		list.add(9);
 	
        list.head=list.reorder();
		list.print();
		
	}
}
